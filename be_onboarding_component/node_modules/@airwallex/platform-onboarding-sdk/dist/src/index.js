import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime/regenerator";
var ENV_HOST = {
  staging: 'static-staging.airwallex.com/widgets/sdk/onboarding',
  demo: 'static-demo.airwallex.com/widgets/sdk/onboarding',
  prod: 'static.airwallex.com/widgets/sdk/onboarding'
};
var SDK_VERSION = 'v1';
export var getGatewayUrl = function getGatewayUrl(env) {
  return "https://".concat(ENV_HOST[env] || ENV_HOST.prod, "/").concat(SDK_VERSION, "/");
};
var STATIC_FILE_NAME = 'index.js';
var createScript = function createScript(gatewayUrl) {
  var script = document.createElement('script');
  script.src = "".concat(gatewayUrl).concat(STATIC_FILE_NAME);
  var parentDom = document.head || document.body;
  if (!parentDom) {
    throw new Error('Airwallex Onboarding SDK scripts requires a <head> or <body> html element in order to be loaded.');
  }
  parentDom.appendChild(script);
  return script;
};
export var loadScript = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {
    var env, MAX_RETRY_COUNT, RETRY_COUNT, sleep, tryToResolve;
    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            env = _ref.env;
            if (!(typeof window === 'undefined')) {
              _context2.next = 3;
              break;
            }
            return _context2.abrupt("return", null);
          case 3:
            if (!window.AirwallexOnboarding) {
              _context2.next = 5;
              break;
            }
            return _context2.abrupt("return", window.AirwallexOnboarding);
          case 5:
            MAX_RETRY_COUNT = 3;
            RETRY_COUNT = 0;
            sleep = function sleep() {
              return new Promise(function (resolve) {
                return window.setTimeout(resolve, 500);
              });
            };
            tryToResolve = /*#__PURE__*/function () {
              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
                var scriptUrl, script;
                return _regeneratorRuntime.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        scriptUrl = getGatewayUrl(env || 'prod');
                        script = document.querySelector("script[src=\"".concat(scriptUrl, "\"], script[src=\"").concat(scriptUrl, "/\"]")) || createScript(scriptUrl);
                        return _context.abrupt("return", new Promise(function (resolve, reject) {
                          script.addEventListener('load', function () {
                            if (window.AirwallexOnboarding) {
                              resolve(window.AirwallexOnboarding);
                            } else {
                              reject(new Error('Failed to load Airwallex Onboarding SDK on load event.'));
                            }
                          });
                          script.addEventListener('error', function () {
                            reject(new Error('Failed to load Airwallex Onboarding SDK scripts.'));
                            script.remove && script.remove();
                          });
                        }));
                      case 3:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee);
              }));
              return function tryToResolve() {
                return _ref3.apply(this, arguments);
              };
            }();
          case 9:
            if (!(RETRY_COUNT < MAX_RETRY_COUNT)) {
              _context2.next = 23;
              break;
            }
            _context2.prev = 10;
            _context2.next = 13;
            return tryToResolve();
          case 13:
            return _context2.abrupt("return", _context2.sent);
          case 16:
            _context2.prev = 16;
            _context2.t0 = _context2["catch"](10);
            RETRY_COUNT++;
            _context2.next = 21;
            return sleep();
          case 21:
            _context2.next = 9;
            break;
          case 23:
            return _context2.abrupt("return", null);
          case 24:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[10, 16]]);
  }));
  return function loadScript(_x) {
    return _ref2.apply(this, arguments);
  };
}();
export var init = /*#__PURE__*/function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(options) {
    var errMsg;
    return _regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return loadScript(options);
          case 2:
            if (window.AirwallexOnboarding) {
              _context3.next = 8;
              break;
            }
            errMsg = 'Failed when initialize Airwallex platform onboarding SDK';
            console.error(errMsg);
            return _context3.abrupt("return", Promise.reject(new Error(errMsg)));
          case 8:
            return _context3.abrupt("return", window.AirwallexOnboarding.init(options));
          case 9:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return function init(_x2) {
    return _ref4.apply(this, arguments);
  };
}();
export var createElement = function createElement(type, options) {
  if (!window.AirwallexOnboarding) {
    console.error('Please initialize Airwallex platform onboarding SDK before createElement()');
    return null;
  } else {
    return window.AirwallexOnboarding.createElement(type, options);
  }
};
//# sourceMappingURL=index.js.map